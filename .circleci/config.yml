# CircleCI configuration file

version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:2022.07.1
    steps:
      - checkout
      - run: docker build -t oc-lettings-site:${CIRCLE_SHA1} .
      - run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: docker tag oc-lettings-site:${CIRCLE_SHA1} $DOCKERHUB_USERNAME/oc-lettings-site:${CIRCLE_SHA1}
      - run: docker push $DOCKERHUB_USERNAME/oc-lettings-site:${CIRCLE_SHA1}
  deploy:
    machine:
      image: ubuntu-2004:2022.07.1
    steps:
      - checkout
      # Deploy to Heroku
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      # Migrations
      - run:
          name: Migrations
          command: |
            curl -X POST https://api.heroku.com/apps/$HEROKU_APP_NAME/dynos \
              -H "Authorization: Bearer $HEROKU_API_KEY" \
              -H "Accept: application/vnd.heroku+json; version=3" \
              -H "Content-Type: application/json" \
              -d '{
                "attach": true,
                "command": "python manage.py migrate"
              }'
      # Load dumped data
      - run:
          name: Load dumped data
          command: |
            curl -X POST https://api.heroku.com/apps/$HEROKU_APP_NAME/dynos \
              -H "Authorization: Bearer $HEROKU_API_KEY" \
              -H "Accept: application/vnd.heroku+json; version=3" \
              -H "Content-Type: application/json" \
              -d '{
                "attach": true,
                "command": "python manage.py loaddata dumped_data/data.json --format=json"
              }'

  test:
    machine:
      image: ubuntu-2004:2022.07.1
    steps:
      - checkout
      - run: sudo apt install python3
      - run: sudo apt install firefox
      - run: pip install --upgrade pip
      - run: pip3 install -r requirements.txt
      - run: python3 -m flake8
      - run: python3 -m manage test
      


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
          require: test
      - test:
          filters:
            branches:
              only: master
      - deploy:
          filters:
            branches:
              only: master
          require: test

  test-worklow:
    jobs:
      - test:
          filters:
            branches:
              only: develop